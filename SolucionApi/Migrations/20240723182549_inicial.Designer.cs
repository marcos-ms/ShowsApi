// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolucionApi.Data;

#nullable disable

namespace SolucionApi.Migrations
{
    [DbContext(typeof(DataBaseApiDbContext))]
    [Migration("20240723182549_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SolucionApi.Data.Entities.NetworkEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OfficialSite")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Networks");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.ShowEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<int?>("AverageRuntime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ended")
                        .HasColumnType("date");

                    b.Property<string>("Genres")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Language")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NetworkId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("OfficialSite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Premiered")
                        .HasColumnType("date");

                    b.Property<int?>("Runtime")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Summary")
                        .HasMaxLength(4096)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long?>("Updated")
                        .HasColumnType("bigint");

                    b.Property<string>("Url")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("WebChannelId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NetworkId");

                    b.HasIndex("WebChannelId");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.WebChannelEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OfficialSite")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("WebChannels");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.NetworkEntity", b =>
                {
                    b.OwnsOne("SolucionApi.Data.Entities.CountryEntity", "Country", b1 =>
                        {
                            b1.Property<string>("NetworkEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Code")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("CountryCode");

                            b1.Property<string>("Name")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("CountryName");

                            b1.Property<string>("Timezone")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasColumnName("CountryTimeZone");

                            b1.HasKey("NetworkEntityId");

                            b1.ToTable("Networks");

                            b1.WithOwner()
                                .HasForeignKey("NetworkEntityId");
                        });

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.ShowEntity", b =>
                {
                    b.HasOne("SolucionApi.Data.Entities.NetworkEntity", "Network")
                        .WithMany("Shows")
                        .HasForeignKey("NetworkId");

                    b.HasOne("SolucionApi.Data.Entities.WebChannelEntity", "WebChannel")
                        .WithMany("Shows")
                        .HasForeignKey("WebChannelId");

                    b.OwnsOne("SolucionApi.Data.Entities.ExternalsEntity", "Externals", b1 =>
                        {
                            b1.Property<string>("ShowEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Imdb")
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasColumnName("Imdb");

                            b1.Property<int?>("Thetvdb")
                                .HasMaxLength(64)
                                .HasColumnType("int")
                                .HasColumnName("Thetvdb");

                            b1.Property<int?>("Tvrage")
                                .HasMaxLength(64)
                                .HasColumnType("int")
                                .HasColumnName("Tvrage");

                            b1.HasKey("ShowEntityId");

                            b1.ToTable("Shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowEntityId");
                        });

                    b.OwnsOne("SolucionApi.Data.Entities.ImageEntity", "Image", b1 =>
                        {
                            b1.Property<string>("ShowEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Medium")
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)")
                                .HasColumnName("Medium");

                            b1.Property<string>("Original")
                                .HasMaxLength(512)
                                .HasColumnType("nvarchar(512)")
                                .HasColumnName("Original");

                            b1.HasKey("ShowEntityId");

                            b1.ToTable("Shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowEntityId");
                        });

                    b.OwnsOne("SolucionApi.Data.Entities.LinksEntity", "Links", b1 =>
                        {
                            b1.Property<string>("ShowEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.HasKey("ShowEntityId");

                            b1.ToTable("Shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowEntityId");

                            b1.OwnsOne("SolucionApi.Data.Entities.EpisodeEntity", "Nextepisode", b2 =>
                                {
                                    b2.Property<string>("LinksEntityShowEntityId")
                                        .HasColumnType("nvarchar(36)");

                                    b2.Property<string>("Href")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("NextEpisodeHref");

                                    b2.Property<string>("Name")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)")
                                        .HasColumnName("NextEpisodeName");

                                    b2.HasKey("LinksEntityShowEntityId");

                                    b2.ToTable("Shows");

                                    b2.WithOwner()
                                        .HasForeignKey("LinksEntityShowEntityId");
                                });

                            b1.OwnsOne("SolucionApi.Data.Entities.EpisodeEntity", "Previousepisode", b2 =>
                                {
                                    b2.Property<string>("LinksEntityShowEntityId")
                                        .HasColumnType("nvarchar(36)");

                                    b2.Property<string>("Href")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("PreviousEpisodeHref");

                                    b2.Property<string>("Name")
                                        .HasMaxLength(256)
                                        .HasColumnType("nvarchar(256)")
                                        .HasColumnName("PreviousEpisodeName");

                                    b2.HasKey("LinksEntityShowEntityId");

                                    b2.ToTable("Shows");

                                    b2.WithOwner()
                                        .HasForeignKey("LinksEntityShowEntityId");
                                });

                            b1.OwnsOne("SolucionApi.Data.Entities.SelfEntity", "Self", b2 =>
                                {
                                    b2.Property<string>("LinksEntityShowEntityId")
                                        .HasColumnType("nvarchar(36)");

                                    b2.Property<string>("Href")
                                        .HasColumnType("nvarchar(max)")
                                        .HasColumnName("SelfHref");

                                    b2.HasKey("LinksEntityShowEntityId");

                                    b2.ToTable("Shows");

                                    b2.WithOwner()
                                        .HasForeignKey("LinksEntityShowEntityId");
                                });

                            b1.Navigation("Nextepisode")
                                .IsRequired();

                            b1.Navigation("Previousepisode")
                                .IsRequired();

                            b1.Navigation("Self")
                                .IsRequired();
                        });

                    b.OwnsOne("SolucionApi.Data.Entities.RatingEntity", "Rating", b1 =>
                        {
                            b1.Property<string>("ShowEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<double?>("Average")
                                .HasPrecision(8, 2)
                                .HasColumnType("float(8)")
                                .HasColumnName("Average");

                            b1.HasKey("ShowEntityId");

                            b1.ToTable("Shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowEntityId");
                        });

                    b.OwnsOne("SolucionApi.Data.Entities.ScheduleEntity", "Schedule", b1 =>
                        {
                            b1.Property<string>("ShowEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Days")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasColumnName("Days");

                            b1.Property<string>("Time")
                                .HasMaxLength(64)
                                .HasColumnType("nvarchar(64)")
                                .HasColumnName("Time");

                            b1.HasKey("ShowEntityId");

                            b1.ToTable("Shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowEntityId");
                        });

                    b.OwnsOne("SolucionApi.Data.Entities.CountryEntity", "DvdCountry", b1 =>
                        {
                            b1.Property<string>("ShowEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Code")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("DvdCountryCode");

                            b1.Property<string>("Name")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("DvdCountryName");

                            b1.Property<string>("Timezone")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasColumnName("DvdCountryTimeZone");

                            b1.HasKey("ShowEntityId");

                            b1.ToTable("Shows");

                            b1.WithOwner()
                                .HasForeignKey("ShowEntityId");
                        });

                    b.Navigation("DvdCountry")
                        .IsRequired();

                    b.Navigation("Externals")
                        .IsRequired();

                    b.Navigation("Image")
                        .IsRequired();

                    b.Navigation("Links")
                        .IsRequired();

                    b.Navigation("Network");

                    b.Navigation("Rating")
                        .IsRequired();

                    b.Navigation("Schedule");

                    b.Navigation("WebChannel");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.WebChannelEntity", b =>
                {
                    b.OwnsOne("SolucionApi.Data.Entities.CountryEntity", "Country", b1 =>
                        {
                            b1.Property<string>("WebChannelEntityId")
                                .HasColumnType("nvarchar(36)");

                            b1.Property<string>("Code")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("CountryCode");

                            b1.Property<string>("Name")
                                .HasMaxLength(256)
                                .HasColumnType("nvarchar(256)")
                                .HasColumnName("CountryName");

                            b1.Property<string>("Timezone")
                                .HasMaxLength(128)
                                .HasColumnType("nvarchar(128)")
                                .HasColumnName("CountryTimeZone");

                            b1.HasKey("WebChannelEntityId");

                            b1.ToTable("WebChannels");

                            b1.WithOwner()
                                .HasForeignKey("WebChannelEntityId");
                        });

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.NetworkEntity", b =>
                {
                    b.Navigation("Shows");
                });

            modelBuilder.Entity("SolucionApi.Data.Entities.WebChannelEntity", b =>
                {
                    b.Navigation("Shows");
                });
#pragma warning restore 612, 618
        }
    }
}
